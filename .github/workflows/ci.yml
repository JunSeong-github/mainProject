name: CI (diagnostic)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  diag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree
        run: |
          pwd
          ls -la
          ls -la mainProject || true
          ls -la mainProject/gradle/wrapper || true

      # ---------- Backend (Gradle) ----------
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Ensure gradlew executable
        working-directory: mainProject
        run: chmod +x gradlew

      - name: Gradle version
        working-directory: mainProject
        run: ./gradlew --version

      # 테스트는 임시로 스킵하고 빌드만 확인
      - name: Gradle assemble (skip tests)
        working-directory: mainProject
        run: ./gradlew --no-daemon clean bootJar -x test --stacktrace --info

      # ---------- Frontend (Node) ----------
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps (npm ci or npm install)
        working-directory: frontend
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Frontend build
        working-directory: frontend
        run: npm run build

#name: CI (Build & Docker Push)
#
#on:
#  push:
#    branches: [ "main" ]
#  workflow_dispatch:
#
#env:
#  REGISTRY: ghcr.io
#  IMAGE_BACKEND: ${{ github.repository }}-backend
#  IMAGE_FRONTEND: ${{ github.repository }}-frontend
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      # Backend build
#      - name: Setup JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: "21"
#
#      - name: Gradle build
#        working-directory: mainProject
#        run: ./gradlew --no-daemon clean test bootJar
#
#      # Frontend build
#      - name: Setup Node
#        uses: actions/setup-node@v4
#        with:
#          node-version: "20"
#
#      - name: Install & Build (frontend)
#        working-directory: frontend
#        run: |
#          npm ci
#          npm run build
#
#      # Login GHCR
#      - name: Login to GHCR
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # Build & Push backend image
#      - name: Build & Push backend
#        uses: docker/build-push-action@v5
#        with:
#          context: ./mainProject
#          file: ./mainProject/Dockerfile
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:latest
#            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }}
#
#      # Build & Push frontend image
#      - name: Build & Push frontend
#        uses: docker/build-push-action@v5
#        with:
#          context: ./frontend
#          file: ./frontend/Dockerfile
#          push: true
#          tags: |
#            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:latest
#            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
